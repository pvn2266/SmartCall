{"version":3,"sources":["webpack:///./src/app/layout/blank-page/blank-page-routing.module.ts","webpack:///./src/app/layout/blank-page/blank-page.component.html","webpack:///./src/app/layout/blank-page/blank-page.component.scss","webpack:///./src/app/layout/blank-page/blank-page.component.ts","webpack:///./src/app/layout/blank-page/blank-page.module.ts"],"names":[],"mappings":"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","file":"blank-page-blank-page-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlankPageComponent } from './blank-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BlankPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BlankPageRoutingModule {}\n","module.exports = \"<div>\\r\\n    <h2 class=\\\"text-muted\\\"> My Answered Calls <small></small></h2>\\r\\n\\r\\n    <div class=\\\"card mb-3 \\\">\\r\\n        <div class=\\\"card-header \\\">\\r\\n            My Answered Calls\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"padding: 10px 0px;\\\">\\r\\n                <div class=\\\"form-group col-xl-2\\\">\\r\\n                    <!-- <label>Filter</label> -->\\r\\n                    <select class=\\\"form-control \\\" [(ngModel)]=\\\"type\\\" (change)=\\\"onChange($event.target.value)\\\"> \\r\\n                        <option value=\\\"Incoming\\\">Incoming</option>\\r\\n                        <option  value=\\\"Outgoing\\\">Outgoing</option>\\r\\n                        <option  value=\\\"Missed\\\">Missed</option>\\r\\n                        <option value=\\\"Today\\\">All</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group col-xl-2\\\">\\r\\n                    </div>\\r\\n                <div class=\\\"form-group col-xl-2\\\">\\r\\n                </div>\\r\\n               <!-- <div class=\\\"form-group col-xl-1\\\">\\r\\n                </div> -->\\r\\n              \\r\\n\\r\\n                    <div class=\\\"form-group col-xl-2\\\">\\r\\n                        <!-- <label for=\\\"startDate\\\" class=\\\"control-label\\\">Start Date</label> -->\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"Start Date\\\" (ngModelChange)=\\\"setMinDate($event)\\\"\\r\\n                                 name=\\\"startDate\\\" [(ngModel)]=\\\"dataToBeUsed.startDate\\\" ngbDatepicker #s=\\\"ngbDatepicker\\\" firstDayOfTheWeek=1 [startDate]=\\\"dataToBeUsed.startDate\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"s.toggle()\\\" >\\r\\n                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 20px; padding: 9px; \\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div class=\\\"form-group col-xl-2\\\">\\r\\n                        <!-- <label for=\\\"startDate\\\" class=\\\"control-label\\\">End Date</label> -->\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"End Date\\\"  (ngModelChange)=\\\"eddate($event)\\\"\\r\\n                                 name=\\\"endDate\\\"  [(ngModel)]=\\\"dataToBeUsed.endDate\\\" ngbDatepicker #e=\\\"ngbDatepicker\\\" [minDate]=\\\"dataToBeUsed.minDate\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"e.toggle()\\\" >\\r\\n                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 20px; padding: 9px; \\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xl-2\\\"   *ngIf=\\\"filterdata\\\">\\r\\n                            <button  class=\\\"btn btn-sm btn-default\\\" (click)=\\\"reset()\\\" style=\\\" margin: 5px; \\\" >Reset</button>\\r\\n                            <p style=\\\"\\r\\n                            font-size: 11px;\\r\\n                            padding: 0px 2px;\\r\\n                            margin: 0px !important;\\r\\n                        \\\">Reset to get all record</p>\\r\\n                    </div>\\r\\n              \\r\\n            </div>\\r\\n        <div class=\\\"card-body table-responsive \\\"  *ngIf=\\\"data!=null && !filterdata\\\">\\r\\n            <table class=\\\"table table-bordered \\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <!-- <th>#</th> -->\\r\\n                        <th>Type</th>\\r\\n                        <!-- <th>First Name</th>\\r\\n                        <th>Last Name</th> -->\\r\\n                        <th>Organization Name</th>\\r\\n                        <th>Party Number</th>\\r\\n                        <th>Party Name</th>\\r\\n                        <th>Purpose</th>\\r\\n                        <th>Remarks</th>\\r\\n                        <th>Call Date/Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let a of data,let i=index\\\">\\r\\n                    <tr (click)=\\\"open(a)\\\"  *ngIf=\\\"type=='Today'\\\" >\\r\\n                        <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                        <td>{{a.type}}</td>\\r\\n                        <!-- <td>{{a.firstName}}</td>\\r\\n                        <td>{{a.lastName}}</td> -->\\r\\n                        <td>{{a.orgName}}</td>\\r\\n                        <td>{{a.partyNumber}}</td>\\r\\n                        <td>{{a.partyName}}</td>\\r\\n                        <td>{{a.purpose}}</td>\\r\\n                        <td>{{a.remarks}}</td>\\r\\n                        <td>{{a.callDateTime}}</td>\\r\\n                       \\r\\n                    </tr>\\r\\n                    <tr (click)=\\\"open(a)\\\" *ngIf=\\\"a.type==type && type=='Outgoing'\\\">\\r\\n                        <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                        <td>{{a.type}}</td>\\r\\n                        <!-- <td>{{a.firstName}}</td>\\r\\n                        <td>{{a.lastName}}</td> -->\\r\\n                        <td>{{a.orgName}}</td>\\r\\n                        <td>{{a.partyNumber}}</td>\\r\\n                        <td>{{a.partyName}}</td>\\r\\n                        <td>{{a.purpose}}</td>\\r\\n                        <td>{{a.remarks}}</td>\\r\\n                        <td>{{a.callDateTime}}</td>\\r\\n                   \\r\\n                    </tr>\\r\\n                    <tr (click)=\\\"open(a)\\\" *ngIf=\\\"a.type==type && type=='Incoming'\\\">\\r\\n                        <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                        <td>{{a.type}}</td>\\r\\n                        <!-- <td>{{a.firstName}}</td>\\r\\n                        <td>{{a.lastName}}</td> -->\\r\\n                        <td>{{a.orgName}}</td>\\r\\n                        <td>{{a.partyNumber}}</td>\\r\\n                        <td>{{a.partyName}}</td>\\r\\n                        <td>{{a.purpose}}</td>\\r\\n                        <td>{{a.remarks}}</td>\\r\\n                        <td>{{a.callDateTime}}</td>\\r\\n                   \\r\\n                    </tr>\\r\\n                    <tr (click)=\\\"open(a)\\\" *ngIf=\\\"a.type==type && type=='Missed'\\\">\\r\\n                        <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                        <td>{{a.type}}</td>\\r\\n                        <!-- <td>{{a.firstName}}</td>\\r\\n                        <td>{{a.lastName}}</td> -->\\r\\n                        <td>{{a.orgName}}</td>\\r\\n                        <td>{{a.partyNumber}}</td>\\r\\n                        <td>{{a.partyName}}</td>\\r\\n                        <td>{{a.purpose}}</td>\\r\\n                        <td>{{a.remarks}}</td>\\r\\n                        <td>{{a.callDateTime}}</td>\\r\\n                   \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <!-- <tfoot> \\r\\n                    <tr>\\r\\n                        <td>Total</td>\\r\\n                        <td>{{data.length}}</td>\\r\\n                    </tr>\\r\\n                </tfoot> -->\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body table-responsive \\\"  *ngIf=\\\"localdata!=null && filterdata\\\">\\r\\n                <table class=\\\"table table-bordered \\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <!-- <th>#</th> -->\\r\\n                            <th>Type</th>\\r\\n                            <!-- <th>First Name</th>\\r\\n                            <th>Last Name</th> -->\\r\\n                            <th>Organization Name</th>\\r\\n                            <th>Party Number</th>\\r\\n                            <th>Party Name</th>\\r\\n                            <th>Purpose</th>\\r\\n                            <th>Remarks</th>\\r\\n                            <th>Call Date/Time</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let a of localdata,let i=index\\\">\\r\\n                        <tr (click)=\\\"open(a)\\\"  *ngIf=\\\"type=='Today'\\\">\\r\\n                            <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                            <td>{{a.type}}</td>\\r\\n                            <!-- <td>{{a.firstName}}</td>\\r\\n                            <td>{{a.lastName}}</td> -->\\r\\n                            <td>{{a.orgName}}</td>\\r\\n                            <td>{{a.partyNumber}}</td>\\r\\n                            <td>{{a.partyName}}</td>\\r\\n                            <td>{{a.purpose}}</td>\\r\\n                            <td>{{a.remarks}}</td>\\r\\n                            <td>{{a.callDateTime}}</td>\\r\\n                        \\r\\n                        </tr>\\r\\n                        <tr (click)=\\\"open(a)\\\" *ngIf=\\\"a.type==type && type=='Outgoing'\\\">\\r\\n                            <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                            <td>{{a.type}}</td>\\r\\n                            <!-- <td>{{a.firstName}}</td>\\r\\n                            <td>{{a.lastName}}</td> -->\\r\\n                            <td>{{a.orgName}}</td>\\r\\n                            <td>{{a.partyNumber}}</td>\\r\\n                            <td>{{a.partyName}}</td>\\r\\n                            <td>{{a.purpose}}</td>\\r\\n                            <td>{{a.remarks}}</td>\\r\\n                            <td>{{a.callDateTime}}</td>\\r\\n                        \\r\\n                        </tr>\\r\\n                        <tr (click)=\\\"open(a)\\\" *ngIf=\\\"a.type==type && type=='Incoming'\\\">\\r\\n                            <!-- <th scope=\\\"row \\\">{{i+1}}</th> -->\\r\\n                            <td>{{a.type}}</td>\\r\\n                            <!-- <td>{{a.firstName}}</td>\\r\\n                            <td>{{a.lastName}}</td> -->\\r\\n                            <td>{{a.orgName}}</td>\\r\\n                            <td>{{a.partyNumber}}</td>\\r\\n                            <td>{{a.partyName}}</td>\\r\\n                            <td>{{a.purpose}}</td>\\r\\n                            <td>{{a.remarks}}</td>\\r\\n                            <td>{{a.callDateTime}}</td>\\r\\n                          \\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <!-- <tfoot>\\r\\n                        <tr>\\r\\n                            <td>Total</td>\\r\\n                            <td>{{data.length}}</td>\\r\\n                        </tr>\\r\\n                    </tfoot> -->\\r\\n                </table>\\r\\n            </div>\\r\\n        <div *ngIf=\\\"data==null\\\" style=\\\"padding: 20px;\\\">\\r\\n            No Unattended calls\\r\\n        </div>\\r\\n        <!--  <div class=\\\"card-footer \\\">\\r\\n            <button class=\\\"btn btn-info btn-sm \\\" (click)=\\\"eventRegisteredUsersUpdate() \\\">Update</button>\\r\\n        </div> -->\\r\\n    </div>\"","module.exports = \"tr {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dlc2NvZS9EZXNrdG9wL0Rhc2hib2FyZEFkbWluL3NyYy9hcHAvbGF5b3V0L2JsYW5rLXBhZ2UvYmxhbmstcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2JsYW5rLXBhZ2UvYmxhbmstcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { Output, EventEmitter } from '@angular/core'; \n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n    selector: 'app-blank-page',\n    templateUrl: './blank-page.component.html',\n    styleUrls: ['./blank-page.component.scss']\n})\nexport class BlankPageComponent implements OnInit {\n    constructor(private calendar: NgbCalendar, public apiservice: ApiService,  private modalService: NgbModal) {}\n    data:any=[];\n    public localdata: any = [];\n    type:any='';\n    tday:any;\n    today:boolean=false;\n    startdate:any;\n    enddate:any;\n    dataToBeUsed = { 'startDate' : {},\n    'endDate' : {},\n    'minDate' : {}};\n    filterdata:boolean=false;\n\n    ngOnInit() {\n      localStorage.removeItem('localdata1');\n      this.dataToBeUsed = { 'startDate' : this.calendar.getToday(),\n      'endDate' :  this.calendar.getToday(),\n      'minDate' :  this.calendar.getToday()};\n  \n        this.startdate= this.calendar.getToday();\n      this.type='Today';\n      this.getData();\n     // this.userData=JSON.parse(localStorage.getItem('userData'));\n      this.tday=new Date().toISOString().split('T')[0];\n      console.log(this.tday);\n\n      setTimeout(() => {\n        this.eddate('');\n      }, 2000);\n    }\n\n\n    setMinDate(event) {\n      this.startdate=event;\n     // this.dataToBeUsed.minDate = event;\n      console.log(this.dataToBeUsed);\n      console.log(event);\n      this.dataToBeUsed = { 'startDate' : this.calendar.getToday(),\n      'endDate' : {},\n      'minDate' : event};\n    }\n\n    eddate(e) {\n      this.filterdata = true;\n      let start, end;\n      start = this.startdate.year + '-' + this.startdate.month + '-' + this.startdate.day;\n      if(e!='')\n      {\n         end = e.year + '-' + e.month + '-' + e.day  ;\n      }\n      else{\n         end = start ;\n      }\n      // console.log(this.enddate);\n      console.log(this.dataToBeUsed);\n      console.log(e);\n\n      \n     // this should be of object Date()\n      console.log(start);\n      console.log(end);\n\n     // this.getData();\n      this.localdata = JSON.parse(localStorage.getItem('localdata1'));\n      const selectedMembers = this.localdata.filter(\n      m => {\n        return  new Date(m.callDateTime).toLocaleDateString() >= new Date(start).toLocaleDateString() && new Date(m.callDateTime).toLocaleDateString() <= new Date(end).toLocaleDateString()\n      } );\n\n      console.log(selectedMembers);\n      this.localdata = selectedMembers;\n      console.log(this.localdata);\n    }\n\n    reset() {\n      this.filterdata = false;\n      localStorage.removeItem('localdata1');\n      this.type = 'Today';\n      this.getData();\n    }\n\n    onChange(v) {\n      console.log(v);\n      if(v==\"Today\")\n      {\n\n      }\n  }\n\n    getData()\n    {\n      this.apiservice.allansweredcalls().subscribe((response) => {\n        console.log('allansweredcalls response', response);\n        if (response.Responsecode==200) {\n          this.data = response.CallsData;\n\n          if(!localStorage.getItem('localdata1'))\n          localStorage.setItem('localdata1',JSON.stringify(this.data));\n\n          console.log(this.data);\n        } else {\n          console.log('', response.message);\n        }\n      }, (err) => {\n        console.log('err', err);\n      });\n    }\n\n    open(a) {\n        const modalRef = this.modalService.open(NgbdModalContent1);\n        modalRef.componentInstance.a =  a;\n        modalRef.componentInstance.partyNumber = a.partyNumber;\n        modalRef.componentInstance.emitData.subscribe(($e) => {\n          console.log('$e', $e);\n          this.getData();\n        })\n      }\n\n     \n  }\n\n\n\n\n\n@Component({\n    selector: 'ngbd-modal-content',\n    template: `\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Enter Details</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n  \n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n          <label>Purpose</label>\n          <input type=\"text\" formControlName=\"purpose\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.purpose.errors }\" />\n          <div *ngIf=\"submitted && f.purpose.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.purpose.errors.required\">Purpose is required</div>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label>Organization name</label>\n          <input type=\"text\" formControlName=\"orgname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.orgname.errors }\" />\n          <div *ngIf=\"submitted && f.orgname.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.orgname.errors.required\">Organization name is required</div>\n          </div>\n      </div>\n\n       <div class=\"form-group\">\n          <label>Party number</label>\n          <input type=\"text\" formControlName=\"partyNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.partyNumber.errors }\" />\n      </div>\n\n       <div class=\"form-group\">\n          <label>Party name</label>\n          <input type=\"text\" formControlName=\"partyname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.partyname.errors }\" />\n          <div *ngIf=\"submitted && f.partyname.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.partyname.errors.required\">Party name is required</div>\n          </div>\n      </div>\n       <div class=\"form-group\">\n          <label>Remarks</label>\n          <input type=\"text\" formControlName=\"remarks\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.remarks.errors }\" />\n          <div *ngIf=\"submitted && f.remarks.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.remarks.errors.required\">Remarks is required</div>\n          </div>\n      </div>\n     \n\n      <div class=\"form-group\">\n          <button  class=\"btn btn-outline-dark\" >Submit</button>\n      </div>\n  </form>\n  \n      </div>\n     \n    `\n  })\n  \n  export class NgbdModalContent1 {\n    @Input() a;\n    @Input() partyNumber;\n    @Output() emitData = new EventEmitter();\n    info:any=[]\n    registerForm: FormGroup;\n    submitted = false;\n   \n    constructor(public activeModal: NgbActiveModal, private formBuilder: FormBuilder, public apiservice: ApiService) {\n    \n    }\n    // callDateTime: \"2019-05-04 06:53:21\"\n    // callid: \"101\"\n    // firstName: \"Humera\"\n    // lastName: \"Ali\"\n    // officeNumber: \"7722004113\"\n    // orgName: \"undefined\"\n    // partyName: \"undefined\"\n    // partyNumber: \"9975172266\"\n    // purpose: \"undefined\"\n    // remarks: \"undefined\"\n    // type: \"Incoming\"\n    ngOnInit() {\n      console.log(this.a);\n      this.registerForm = this.formBuilder.group({\n          purpose: [this.a.purpose, Validators.required],\n          orgname: [this.a.orgName, Validators.required],\n          partyNumber: [this.a.partyNumber, Validators.required],\n          partyname: [this.a.partyName, Validators.required],\n          remarks: [this.a.remarks, Validators.required],\n          callid: [this.a.callid, Validators.required]\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.registerForm.invalid) {\n         // return;\n         alert('Enter Complete Details');\n      }\n      else{\n        console.log(this.registerForm.value);\n        this.activeModal.dismiss('Close click')\n  \n        this.apiservice.updatecalldetails(this.registerForm.value,).subscribe((response) => {\n          console.log('updateTask response', response);\n          if(response.Responsecode==200)\n          {\n            alert(response.Message);\n            this.emitData.next('Hello world');\n        //    window.location.reload();  \n          }\n          else{\n            alert(response.Message);\n          }\n      \n        }, (err) => {\n          console.log('err', err);\n        });\n      }  \n\n    //  alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n  }\n    submit(a,b)\n    {\n      console.log(a,b)\n      if(this.info.purpose!='' && this.info.orgname!='' &&  this.info.partyname!=''  && this.info.remarks!='')\n      {\n        a.callid=b;\n       // a.partyname=c;\n        console.log(\"aaaaaaaaaaa\",a);\n        this.activeModal.dismiss('Close click')\n  \n          this.apiservice.updatecalldetails(a).subscribe((response) => {\n            console.log('updateTask response', response);\n            if(response.Responsecode==200)\n            {\n              alert(response.Message);\n              this.emitData.next('Hello world');\n          //    window.location.reload();  \n            }\n            else{\n              alert(response.Message);\n            }\n        \n          }, (err) => {\n            console.log('err', err);\n          });\n        }  \n        else\n        {\n          alert(\"Enter Complete Details!\");\n        }\n      }\n  \n  \n  \n  \n  }\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlankPageRoutingModule } from './blank-page-routing.module';\nimport { BlankPageComponent, NgbdModalContent1 } from './blank-page.component';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal ,NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [CommonModule, BlankPageRoutingModule,FormsModule, NgbModule,\n        NgbModalModule,ReactiveFormsModule ],\n    declarations: [BlankPageComponent,NgbdModalContent1],\n    entryComponents: [BlankPageComponent,NgbdModalContent1] \n})\nexport class BlankPageModule {}\n"],"sourceRoot":""}